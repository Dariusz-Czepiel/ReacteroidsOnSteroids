{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../src/objects/Particle.ts","../src/functional/helpers.ts","../src/objects/Asteroids.ts","../src/objects/Bullet.ts","../src/objects/Ship.ts","../src/UI.svelte","../node_modules/svelte/store/index.mjs","../src/functional/Stores.ts","../src/GameCanvas.svelte","../src/App.svelte","../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","export default class Particle {\r\n    //type the constructor\r\n    constructor(args) {\r\n        this.delete = false;\r\n        this.position = args.position;\r\n        this.velocity = args.velocity;\r\n        this.radius = args.size;\r\n        this.lifeSpan = args.lifeSpan;\r\n        this.inertia = 0.98;\r\n    }\r\n    destroy() {\r\n        this.delete = true;\r\n    }\r\n    render(state) {\r\n        // Move\r\n        this.position.x += this.velocity.x;\r\n        this.position.y += this.velocity.y;\r\n        this.velocity.x *= this.inertia;\r\n        this.velocity.y *= this.inertia;\r\n        // Shrink\r\n        this.radius -= 0.1;\r\n        if (this.radius < 0.1) {\r\n            this.radius = 0.1;\r\n        }\r\n        if (this.lifeSpan-- < 0) {\r\n            this.destroy();\r\n        }\r\n        // Draw\r\n        const context = state.context;\r\n        context.save();\r\n        context.translate(this.position.x, this.position.y);\r\n        context.fillStyle = '#ffffff';\r\n        context.lineWidth = 2;\r\n        context.beginPath();\r\n        context.moveTo(0, -this.radius);\r\n        context.arc(0, 0, this.radius, 0, 2 * Math.PI);\r\n        context.closePath();\r\n        context.fill();\r\n        context.restore();\r\n    }\r\n}\r\n","/**\r\n * Generates vertices for asteroid polygon with certain count and radius\r\n * @param  {Number} count   Number of vertices\r\n * @param  {Number} rad     Maximal radius of polygon\r\n * @return {Array}        Array of vertices: {x: Number, y: Number}\r\n */\r\nexport function asteroidVertices(count, rad) {\r\n    let p = [];\r\n    for (let i = 0; i < count; i++) {\r\n        p.push({\r\n            x: (-Math.sin((360 / count) * i * Math.PI / 180) + Math.round(Math.random() * 2 - 1) * Math.random() / 3) * rad,\r\n            y: (-Math.cos((360 / count) * i * Math.PI / 180) + Math.round(Math.random() * 2 - 1) * Math.random() / 3) * rad\r\n        });\r\n    }\r\n    return p;\r\n}\r\n;\r\n/**\r\n * Rotate point around center on certain angle\r\n * @param {Object} p        {x: Number, y: Number}\r\n * @param {Object} center   {x: Number, y: Number}\r\n * @param {Number} angle    Angle in radians\r\n */\r\nexport function rotatePoint(p, center, angle) {\r\n    return {\r\n        x: ((p.x - center.x) * Math.cos(angle) - (p.y - center.y) * Math.sin(angle)) + center.x,\r\n        y: ((p.x - center.x) * Math.sin(angle) + (p.y - center.y) * Math.cos(angle)) + center.y\r\n    };\r\n}\r\n;\r\n/**\r\n * Random Number between 2 numbers\r\n */\r\nexport function randomNumBetween(min, max) {\r\n    return Math.random() * (max - min + 1) + min;\r\n}\r\n;\r\n/**\r\n * Random Number between 2 numbers excluding a certain range\r\n */\r\nexport function randomNumBetweenExcluding(min, max, exMin, exMax) {\r\n    let random = randomNumBetween(min, max);\r\n    while (random > exMin && random < exMax) {\r\n        random = Math.random() * (max - min + 1) + min;\r\n    }\r\n    return random;\r\n}\r\n;\r\n","import Particle from './Particle';\r\nimport { asteroidVertices, randomNumBetween } from '../functional/helpers';\r\nexport default class Asteroid {\r\n    //type args\r\n    constructor(args) {\r\n        this.delete = false;\r\n        this.position = args.position;\r\n        this.velocity = {\r\n            x: randomNumBetween(-1.5, 1.5),\r\n            y: randomNumBetween(-1.5, 1.5)\r\n        };\r\n        this.rotation = 0;\r\n        this.rotationSpeed = randomNumBetween(-1, 1);\r\n        this.radius = args.size;\r\n        this.score = (80 / this.radius) * 5;\r\n        this.create = args.create;\r\n        this.addScore = args.addScore;\r\n        this.vertices = asteroidVertices(8, args.size);\r\n    }\r\n    destroy() {\r\n        this.delete = true;\r\n        this.addScore(this.score);\r\n        // Explode\r\n        for (let i = 0; i < this.radius; i++) {\r\n            const particle = new Particle({\r\n                lifeSpan: randomNumBetween(60, 100),\r\n                size: randomNumBetween(1, 3),\r\n                position: {\r\n                    x: this.position.x + randomNumBetween(-this.radius / 4, this.radius / 4),\r\n                    y: this.position.y + randomNumBetween(-this.radius / 4, this.radius / 4)\r\n                },\r\n                velocity: {\r\n                    x: randomNumBetween(-1.5, 1.5),\r\n                    y: randomNumBetween(-1.5, 1.5)\r\n                }\r\n            });\r\n            this.create(particle, 'particles');\r\n        }\r\n        // Break into smaller asteroids\r\n        if (this.radius > 10) {\r\n            for (let i = 0; i < 2; i++) {\r\n                let asteroid = new Asteroid({\r\n                    size: this.radius / 2,\r\n                    position: {\r\n                        x: randomNumBetween(-10, 20) + this.position.x,\r\n                        y: randomNumBetween(-10, 20) + this.position.y\r\n                    },\r\n                    create: this.create.bind(this),\r\n                    addScore: this.addScore.bind(this)\r\n                });\r\n                this.create(asteroid, 'asteroids');\r\n            }\r\n        }\r\n    }\r\n    //type state\r\n    render(state) {\r\n        // Move\r\n        this.position.x += this.velocity.x;\r\n        this.position.y += this.velocity.y;\r\n        // Rotation\r\n        this.rotation += this.rotationSpeed;\r\n        if (this.rotation >= 360) {\r\n            this.rotation -= 360;\r\n        }\r\n        if (this.rotation < 0) {\r\n            this.rotation += 360;\r\n        }\r\n        // Screen edges\r\n        if (this.position.x > state.screen.width + this.radius)\r\n            this.position.x = -this.radius;\r\n        else if (this.position.x < -this.radius)\r\n            this.position.x = state.screen.width + this.radius;\r\n        if (this.position.y > state.screen.height + this.radius)\r\n            this.position.y = -this.radius;\r\n        else if (this.position.y < -this.radius)\r\n            this.position.y = state.screen.height + this.radius;\r\n        // Draw\r\n        const context = state.context;\r\n        context.save();\r\n        context.translate(this.position.x, this.position.y);\r\n        context.rotate(this.rotation * Math.PI / 180);\r\n        context.strokeStyle = '#FFF';\r\n        context.lineWidth = 2;\r\n        context.beginPath();\r\n        context.moveTo(0, -this.radius);\r\n        for (let i = 1; i < this.vertices.length; i++) {\r\n            context.lineTo(this.vertices[i].x, this.vertices[i].y);\r\n        }\r\n        context.closePath();\r\n        context.stroke();\r\n        context.restore();\r\n    }\r\n}\r\n","import { rotatePoint } from '../functional/helpers';\r\nexport default class Bullet {\r\n    //type args\r\n    constructor(args) {\r\n        this.delete = false;\r\n        let posDelta = rotatePoint({ x: 0, y: -20 }, { x: 0, y: 0 }, args.ship.rotation * Math.PI / 180);\r\n        this.position = {\r\n            x: args.ship.position.x + posDelta.x,\r\n            y: args.ship.position.y + posDelta.y\r\n        };\r\n        this.rotation = args.ship.rotation;\r\n        this.velocity = {\r\n            x: posDelta.x / 2,\r\n            y: posDelta.y / 2\r\n        };\r\n        this.radius = 2;\r\n    }\r\n    destroy() {\r\n        this.delete = true;\r\n    }\r\n    //type state\r\n    render(state) {\r\n        // Move\r\n        this.position.x += this.velocity.x;\r\n        this.position.y += this.velocity.y;\r\n        // Delete if it goes out of bounds\r\n        if (this.position.x < 0\r\n            || this.position.y < 0\r\n            || this.position.x > state.screen.width\r\n            || this.position.y > state.screen.height) {\r\n            this.destroy();\r\n        }\r\n        // Draw\r\n        const context = state.context;\r\n        context.save();\r\n        context.translate(this.position.x, this.position.y);\r\n        context.rotate(this.rotation * Math.PI / 180);\r\n        context.fillStyle = '#FFF';\r\n        context.lineWidth = 0.5;\r\n        context.beginPath();\r\n        context.arc(0, 0, 2, 0, 2 * Math.PI);\r\n        context.closePath();\r\n        context.fill();\r\n        context.restore();\r\n    }\r\n}\r\n","import Bullet from './Bullet';\r\nimport Particle from './Particle';\r\nimport { rotatePoint, randomNumBetween } from '../functional/helpers';\r\nexport default class Ship {\r\n    //type constructor\r\n    constructor(args) {\r\n        this.delete = false;\r\n        this.position = args.position;\r\n        this.velocity = {\r\n            x: 0,\r\n            y: 0\r\n        };\r\n        this.rotation = 0;\r\n        this.rotationSpeed = 6;\r\n        this.speed = 0.15;\r\n        this.inertia = 0.99;\r\n        this.radius = 20;\r\n        this.lastShot = 0;\r\n        this.create = args.create;\r\n        this.onDie = args.onDie;\r\n    }\r\n    destroy() {\r\n        this.delete = true;\r\n        this.onDie();\r\n        // Explode\r\n        for (let i = 0; i < 60; i++) {\r\n            const particle = new Particle({\r\n                lifeSpan: randomNumBetween(60, 100),\r\n                size: randomNumBetween(1, 4),\r\n                position: {\r\n                    x: this.position.x + randomNumBetween(-this.radius / 4, this.radius / 4),\r\n                    y: this.position.y + randomNumBetween(-this.radius / 4, this.radius / 4)\r\n                },\r\n                velocity: {\r\n                    x: randomNumBetween(-1.5, 1.5),\r\n                    y: randomNumBetween(-1.5, 1.5)\r\n                }\r\n            });\r\n            this.create(particle, 'particles');\r\n        }\r\n    }\r\n    rotate(dir) {\r\n        if (dir == 'LEFT') {\r\n            this.rotation -= this.rotationSpeed;\r\n        }\r\n        if (dir == 'RIGHT') {\r\n            this.rotation += this.rotationSpeed;\r\n        }\r\n    }\r\n    //why is this not read?\r\n    accelerate(val) {\r\n        this.velocity.x -= Math.sin(-this.rotation * Math.PI / 180) * this.speed;\r\n        this.velocity.y -= Math.cos(-this.rotation * Math.PI / 180) * this.speed;\r\n        // Thruster particles\r\n        let posDelta = rotatePoint({ x: 0, y: -10 }, { x: 0, y: 0 }, (this.rotation - 180) * Math.PI / 180);\r\n        const particle = new Particle({\r\n            lifeSpan: randomNumBetween(20, 40),\r\n            size: randomNumBetween(1, 3),\r\n            position: {\r\n                x: this.position.x + posDelta.x + randomNumBetween(-2, 2),\r\n                y: this.position.y + posDelta.y + randomNumBetween(-2, 2)\r\n            },\r\n            velocity: {\r\n                x: posDelta.x / randomNumBetween(3, 5),\r\n                y: posDelta.y / randomNumBetween(3, 5)\r\n            }\r\n        });\r\n        this.create(particle, 'particles');\r\n    }\r\n    //type state\r\n    render(state) {\r\n        // Controls\r\n        if (state.keys.up) {\r\n            this.accelerate(1);\r\n        }\r\n        if (state.keys.left) {\r\n            this.rotate('LEFT');\r\n        }\r\n        if (state.keys.right) {\r\n            this.rotate('RIGHT');\r\n        }\r\n        if (state.keys.space && Date.now() - this.lastShot > 300) {\r\n            const bullet = new Bullet({ ship: this });\r\n            this.create(bullet, 'bullets');\r\n            this.lastShot = Date.now();\r\n        }\r\n        // Move\r\n        this.position.x += this.velocity.x;\r\n        this.position.y += this.velocity.y;\r\n        this.velocity.x *= this.inertia;\r\n        this.velocity.y *= this.inertia;\r\n        // Rotation\r\n        if (this.rotation >= 360) {\r\n            this.rotation -= 360;\r\n        }\r\n        if (this.rotation < 0) {\r\n            this.rotation += 360;\r\n        }\r\n        // Screen edges\r\n        if (this.position.x > state.screen.width)\r\n            this.position.x = 0;\r\n        else if (this.position.x < 0)\r\n            this.position.x = state.screen.width;\r\n        if (this.position.y > state.screen.height)\r\n            this.position.y = 0;\r\n        else if (this.position.y < 0)\r\n            this.position.y = state.screen.height;\r\n        // Draw\r\n        const context = state.context;\r\n        context.save();\r\n        context.translate(this.position.x, this.position.y);\r\n        context.rotate(this.rotation * Math.PI / 180);\r\n        context.strokeStyle = '#ffffff';\r\n        context.fillStyle = '#000000';\r\n        context.lineWidth = 2;\r\n        context.beginPath();\r\n        context.moveTo(0, -15);\r\n        context.lineTo(10, 10);\r\n        context.lineTo(5, 7);\r\n        context.lineTo(-5, 7);\r\n        context.lineTo(-10, 10);\r\n        context.closePath();\r\n        context.fill();\r\n        context.stroke();\r\n        context.restore();\r\n    }\r\n}\r\n","<script lang=\"ts\">\r\n    import type { GameDataT } from './functional/Types';\r\n\r\n    export let gameData: GameDataT;\r\n    export let message: string;\r\n    export let topScore: number;\r\n    export let startGame: () => void;\r\n</script>\r\n\r\n{#if !gameData.inGame}\r\n    <div class=\"endgame\">\r\n    <p>Game over, man!</p>\r\n    <p>{message}</p>\r\n    <button on:click={ () => startGame() }>\r\n        try again?\r\n    </button>\r\n    </div>\r\n{/if}\r\n<span class=\"score current-score\" >Score: {gameData.currentScore}</span>\r\n<span class=\"score top-score\" >Top Score: {topScore}</span>\r\n<span class=\"controls\" >\r\n    Use [A][S][W][D] or [←][↑][↓][→] to MOVE<br/>\r\n    Use [SPACE] to SHOOT\r\n</span>\r\n\r\n<style>\r\n.endgame{\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\tleft: 50%;\r\n\ttransform: translate(-50%, -50%);\r\n\tpadding: 16px;\r\n\tz-index: 1;\r\n\ttext-align: center;\r\n\tfont-size: 1.2rem;\r\n  }\r\n  .current-score {\r\n\tleft: 20px;\r\n  }\r\n  .top-score {\r\n\tright: 20px;\r\n  }\r\n  .score {\r\n\tdisplay: block;\r\n\tposition: absolute;\r\n\ttop: 15px;\r\n\tz-index: 1;\r\n\tfont-size: 1.3rem;\r\n  }\r\n  .controls {\r\n\tdisplay: block;\r\n\tposition: absolute;\r\n\ttop: 15px;\r\n\tleft: 50%;\r\n\ttransform: translate(-50%, 0);\r\n\tz-index: 1;\r\n\tfont-size: 1rem;\r\n\ttext-align: center;\r\n\tline-height: 1.6;\r\n  }\r\n  button{\r\n\tborder: 4px solid #ffffff;\r\n\tbackground-color: transparent;\r\n\tcolor: #ffffff;\r\n\tfont-size: 1rem;\r\n\tpadding: 10px 20px;\r\n\tmargin: 10px;\r\n\t/*font-family: 'PT Mono', serif;*/\r\n\tcursor: pointer;\r\n  }\r\n  button:hover{\r\n\tbackground-color: #ffffff;\r\n\tcolor: #000000;\r\n  }\r\n</style>","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\r\n//dane dotyczace okna przegladarki\r\nexport const screen = writable({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n    ratio: window.devicePixelRatio || 1\r\n});\r\n//informacja ktory przycisk jest przycisniety w danym momencie\r\nexport const keys = writable({\r\n    left: false,\r\n    right: false,\r\n    up: false,\r\n    down: false,\r\n    space: false\r\n});\r\n//ilosc asteroid\r\nexport const asteroidCount = writable(3);\r\n//dane gry. Wynik i informacja czy przegrales\r\nexport const gameData = writable({\r\n    currentScore: 0,\r\n    inGame: false\r\n});\r\n//najlepszy wynik\r\n//moze uzyj czegos innego niz localstorage\r\nexport const topScore = writable(localStorage['topscore'] || 0);\r\n","<script lang=\"ts\">\r\n\timport { onMount, onDestroy } from 'svelte';\r\n    import { screen } from './functional/Stores';\r\n    export let canvasRef: HTMLCanvasElement;\r\n\r\n\tconst handleResize = (e: UIEvent) => {\r\n\t\tscreen.set({\r\n\t\twidth: window.innerWidth,\r\n\t\theight: window.innerHeight,\r\n\t\tratio: window.devicePixelRatio || 1,\r\n\t\t});\r\n\t}\r\n\r\n\tonMount(() => {\r\n\twindow.addEventListener('resize',  handleResize);\r\n\t});\r\n\r\n\tonDestroy(() => {\r\n\twindow.removeEventListener('resize', handleResize);\r\n\t});\r\n</script>\r\n\r\n<canvas bind:this={canvasRef}\r\n    width={$screen.width * $screen.ratio}\r\n    height={$screen.height * $screen.ratio}\r\n/>\r\n\r\n<style>\r\n  canvas {\r\n\tdisplay: block;\r\n\tbackground-color: #000000;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tbottom: 0;\r\n\tleft: 0;\r\n\tright: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n  }\r\n</style>","<script lang=\"ts\">\n  import { onMount, onDestroy } from 'svelte';\n\timport Asteroid from './objects/Asteroids';\n  import Ship from './objects/Ship';\n  import UI from './UI.svelte';\n  import GameCanvas from './GameCanvas.svelte';\n  \n  import { randomNumBetweenExcluding } from './functional/helpers';\n  import { screen, keys, asteroidCount, gameData, topScore } from './functional/Stores'\n  import type { GameObjects, Unpacked, GameObjectsTypes, GameObjectsBasicTypes } from './functional/Types';\n\n\t// const KEY = {\n\t// \tLEFT:  37,\n\t// \tRIGHT: 39,\n\t// \tUP: 38,\n\t// \tA: 65,\n\t// \tD: 68,\n\t// \tW: 87,\n\t// \tSPACE: 32\n\t// };\n\n\tlet objects: GameObjects = {\n\t\tship: [],\n\t\tasteroids: [],\n\t\tbullets: [],\n\t\tparticles: [],\n\t};\n\n\tlet context: CanvasRenderingContext2D | null = null;\n  let canvasRef: HTMLCanvasElement;\n\n//obluga przyciskow\nconst handleKeys = (e: KeyboardEvent) => {\n  let keysTemp = $keys;\n  const isPressed = e.type === 'keydown';\n  //TODO zmien to na key i zobacz jakie sa\n  //console.log(e.code);\n  //sprawdz jeszcze e.code\n  if(e.key.toLowerCase() === 'a' || e.key === 'ArrowLeft') $keys.left  = isPressed;\n  if(e.key.toLowerCase() === 'd' || e.key === 'ArrowRight') $keys.right = isPressed;\n  if(e.key.toLowerCase() === 'w' || e.key === 'ArrowUp') $keys.up    = isPressed;\n  if(e.key ===  ' ') $keys.space = isPressed;\n  // if(e.keyCode === KEY.LEFT   || e.keyCode === KEY.A) $keys.left  = isPressed;\n  // if(e.keyCode === KEY.RIGHT  || e.keyCode === KEY.D) $keys.right = isPressed;\n  // if(e.keyCode === KEY.UP     || e.keyCode === KEY.W) $keys.up    = isPressed;\n  // if(e.keyCode === KEY.SPACE) $keys.space = isPressed;\n  keys.set(keysTemp);\n}\n\nonMount(() => {\n  window.addEventListener('keyup',   handleKeys);\n  window.addEventListener('keydown', handleKeys);\n\n  const context2D = canvasRef.getContext('2d');\n  startGame();\n  context = context2D;\n  requestAnimationFrame(() => {update()});\n});\n\nonDestroy(() => {\n  window.removeEventListener('keyup', handleKeys);\n  window.removeEventListener('keydown', handleKeys);\n});\n\n//dzieje sie za kazdym razem kiedy cos sie zmienia na canvas\nconst update = () => {\n  if(context != null)\n  {\n    const contextTemp = context;\n    contextTemp.save();\n    contextTemp.scale($screen.ratio, $screen.ratio);\n  \n    // Motion trail\n    contextTemp.fillStyle = '#000';\n    contextTemp.globalAlpha = 0.4;\n    contextTemp.fillRect(0, 0, $screen.width, $screen.height);\n    contextTemp.globalAlpha = 1;\n  \n    // Next set of asteroids\n    if(!objects.asteroids.length){\n      let count = $asteroidCount + 1;\n      asteroidCount.set(count);\n      generateAsteroids(count);\n    }\n  \n    // Check for colisions\n    checkCollisionsWith(objects.bullets, objects.asteroids);\n    checkCollisionsWith(objects.ship, objects.asteroids);\n  \n    // Remove or render\n    updateObjects(objects.particles, 'particles')\n    updateObjects(objects.asteroids, 'asteroids')\n    updateObjects(objects.bullets, 'bullets')\n    updateObjects(objects.ship, 'ship')\n  \n    contextTemp.restore();\n  }\n  // Next frame\n  requestAnimationFrame(() => {update()});\n}\n\nconst addScore = (points: number) => {\n  if($gameData.inGame){\n    gameData.update(gd => ({...gd, currentScore: gd.currentScore + points}));\n  }\n}\n\n//zaczyna gre\n//tworzy statek i pierwsze asteroidy\nconst startGame = () => {\n  gameData.set({ inGame: true, currentScore: 0 });\n  // Make ship\n  const ship = new Ship({\n    position: {\n      x: $screen.width/2,\n      y: $screen.height/2\n    },\n    create: createObject.bind(this),\n    onDie: gameOver.bind(this)\n  });\n  createObject(ship, 'ship');\n\n  // Make asteroids\n  objects.asteroids = [];\n  generateAsteroids($asteroidCount)\n}\n\n//konczy gre\n//zapisuje najlepszy wynik i wyswietla div-a z Game Over\nconst gameOver = () => {\n  gameData.update(gd => ({...gd, inGame: false}));\n\n  // Replace top score\n  if($gameData.currentScore > $topScore){\n    topScore.set($gameData.currentScore);\n    localStorage['topscore'] = $gameData.currentScore;\n  }\n}\n\n//generuje asteroidy w ilosci takiej jak howMany\nconst generateAsteroids = (howMany: number) => {\n  //let asteroids = [];\n  let myShip = objects.ship[0];\n  //console.log(objects.ship);\n  for (let i = 0; i < howMany; i++) {\n    let asteroid = new Asteroid({\n      size: 80,\n      position: {\n        x: randomNumBetweenExcluding(0, $screen.width, myShip.position.x-60, myShip.position.x+60),\n        y: randomNumBetweenExcluding(0, $screen.height, myShip.position.y-60, myShip.position.y+60)\n      },\n      create: createObject.bind(this),\n      addScore: addScore.bind(this)\n    });\n    createObject(asteroid, 'asteroids');\n  }\n}\n\n//dodaje statki,asteroidy,pociski i efekty\nconst createObject = <T extends keyof GameObjects>(item: Unpacked<GameObjects[T]>, group: T) => {\n  (objects[group] as typeof item[]).push(item);\n}\n//aktualizuje statki,asteroidy,pociski i efekty\nconst updateObjects = <T extends keyof GameObjects>(items: GameObjects[T], group: T) => {\n  //console.log(items);\n  let index = 0;\n  for (let item of items) {\n    if (item.delete) {\n      objects[group].splice(index, 1);\n    }else{\n      items[index].render({\n        screen: $screen, context, keys: $keys, asteroidCount: $asteroidCount,\n        topScore: $topScore, currentScore: $gameData.currentScore, inGame: $gameData.inGame\n      });\n    }\n    index++;\n  }\n}\n//sprawdza zderzenie sie 2 obiektow np.: czy asteroida zderzyla sie z statkiem\nconst checkCollisionsWith = (items1: GameObjectsTypes, items2: GameObjectsTypes) => {\n  var a = items1.length - 1;\n  var b: number;\n  for(a; a > -1; --a){\n    b = items2.length - 1;\n    for(b; b > -1; --b){\n      var item1 = items1[a];\n      var item2 = items2[b];\n      if(checkCollision(item1, item2)){\n        item1.destroy();\n        item2.destroy();\n      }\n    }\n  }\n}\nconst checkCollision = (obj1: GameObjectsBasicTypes, obj2: GameObjectsBasicTypes) => {\n  var vx = obj1.position.x - obj2.position.x;\n  var vy = obj1.position.y - obj2.position.y;\n  var length = Math.sqrt(vx * vx + vy * vy);\n  if(length < obj1.radius + obj2.radius){\n    return true;\n  }\n  return false;\n}\n\n  let message: string;\n\n  //kod ponizej obsluguje koniec gry\n  $: if ($gameData.currentScore <= 0) {\n    message = '0 points... So sad.';\n  } else if ($gameData.currentScore >= $topScore){\n    message = 'Top score with ' + $gameData.currentScore + ' points. Woo!';\n  } else {\n    message = $gameData.currentScore + ' Points though :)'\n  }\n</script>\n\n<div class=\"container\">\n  <UI gameData={$gameData} {message} topScore={$topScore} {startGame} />\n  <GameCanvas bind:canvasRef={canvasRef} />\n</div>\n\n<style>\n\t.container {\n\tpadding: 0;\n\tmargin: 0;\n\t/*font-family: 'PT Mono', serif;*/\n\tcolor: #ffffff;\n  }\n</style>","import App from './App.svelte';\r\nconst app = new App({ target: document.body });\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","set_store_value","ret","value","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","current_component","set_current_component","get_current_component","Error","onMount","on_mount","onDestroy","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","d","create_component","mount_component","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","options","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","skip_bound","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","Particle","args","position","velocity","radius","size","lifeSpan","inertia","state","x","y","destroy","save","translate","fillStyle","lineWidth","beginPath","moveTo","arc","Math","PI","closePath","restore","rotatePoint","center","angle","cos","sin","randomNumBetween","min","max","random","randomNumBetweenExcluding","exMin","exMax","Asteroid","rotation","rotationSpeed","score","addScore","vertices","count","rad","round","asteroidVertices","particle","asteroid","bind","screen","width","height","rotate","strokeStyle","lineTo","stroke","Bullet","posDelta","ship","Ship","speed","lastShot","onDie","dir","val","up","accelerate","left","right","Date","now","bullet","event","handler","addEventListener","removeEventListener","currentScore","inGame","gameData","message","topScore","startGame","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","window","innerWidth","innerHeight","ratio","devicePixelRatio","down","asteroidCount","localStorage","canvasRef","handleResize","e","undefined","objects","asteroids","bullets","particles","handleKeys","keysTemp","$keys","isPressed","key","toLowerCase","context2D","getContext","requestAnimationFrame","contextTemp","scale","$screen","globalAlpha","fillRect","$asteroidCount","generateAsteroids","checkCollisionsWith","updateObjects","points","$gameData","gd","assign","createObject","gameOver","$topScore","howMany","myShip","item","group","items","render","items1","items2","item1","item2","checkCollision","obj1","obj2","vx","vy","sqrt","body"],"mappings":"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"}